plugins {
    id 'groovy'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'application'
    id 'com.google.cloud.tools.jib' version '2.1.0'
}

repositories {
    jcenter()
}

configurations {
    developmentOnly
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")

    compileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly 'io.micronaut:micronaut-inject-groovy'

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation 'io.micronaut:micronaut-runtime-groovy'
    implementation 'io.micronaut:micronaut-validation'
    implementation 'javax.annotation:javax.annotation-api'
    implementation 'io.micronaut:micronaut-http-server-netty'
    implementation 'io.micronaut:micronaut-http-client'

    runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'

    testCompileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")

    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation('org.spockframework:spock-core') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testImplementation 'io.micronaut:micronaut-inject-groovy'
    testImplementation 'io.micronaut.test:micronaut-test-spock'
    testImplementation 'io.micronaut.test:micronaut-test-junit5'
}

mainClassName = 'com.thecodesmith.artifactory.Application'

shadowJar {
    mergeServiceFiles()
}

jib.to.image = 'thecodesmith/artifactory-badges'

test.classpath += configurations.developmentOnly

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs '-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote'
}
